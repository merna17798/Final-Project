/*
 * main.c
 *
 *  Created on: 11 Oct 2020
 *      Author: pc
 */
#include "lcd.h"
#include "keypad.h"
#include "uart.h"
enum READY{
	READY1=10,
	READY2=20,
	READY3=30,
	READY4=40,
	READY5=50,
	READY6=60
};

#define NUMBER_OF_OVERFLOWS_PER_HALF_SECOND 2

/* global variable contain the ticks count of the timer */
unsigned char g_tick = 0;

/* Interrupt Service Routine for timer0 compare mode */
ISR(TIMER0_COMP_vect)
{
	g_tick++;
	if(g_tick == NUMBER_OF_OVERFLOWS_PER_HALF_SECOND)
	{
		g_tick = 0; //clear the tick counter again to count a new 0.5 second
	}
}

/* For clock=1Mhz and prescale F_CPU/1024 every count will take 1ms
 * so we just need 250 counts to get 250ms every overflow. put initial timer counter=0
 * and output compare register=250 0 --> 250 (250ms per overflow)
 * so we need timer to overflow 2 times to get a 0.5 second
 */

void timer0_init_CTC_mode(unsigned char tick)
{
	TCNT0 = 0;    // Set Timer initial value to 0
	OCR0  = tick; // Set Compare Value
	TIMSK |= (1<<OCIE0); // Enable Timer0 Compare Interrupt
	/* Configure timer0 control register
	 * 1. Non PWM mode FOC0=1
	 * 2. CTC Mode WGM01=1 & WGM00=0
	 * 3. No need for OC0 in this example so COM00=0 & COM01=0
	 * 4. clock = F_CPU/1024 CS00=1 CS01=0 CS02=1
	 */
	TCCR0 = (1<<FOC0) | (1<<WGM01) | (1<<CS02) | (1<<CS00);
}

void timer0_stop(void){
	TCNT0 = 0; //Set Timer initial value to 0
}

static void get_pass(char arr[50],uint8 sent_pass[7]){
	uint8 key, i,j;
	LCD_sendCommand(CLEAR_COMMAND);
	LCD_displayStringRowColumn(0,0,arr);
	LCD_goToRowColumn(1,0);
	/* if any switch pressed for more than 500 ms it counts more than one press */
	for (i=0;i<5;i++){
		key = KeyPad_getPressedKey(); /* get the pressed key number */
		_delay_ms(2000); /* Press time  */
		LCD_displayCharacter('*'); /* display the pressed keypad switch */
		sent_pass[i]=key;
	}
	key = KeyPad_getPressedKey(); /* get the pressed key number */
	_delay_ms(2000); /* Press time  */
	while (key!=13){
		LCD_sendCommand(CLEAR_COMMAND);
    	LCD_displayStringRowColumn(0,0,"Err, press on/c");
    	key = KeyPad_getPressedKey(); /* get the pressed key number */
    	_delay_ms(2000); /* Press time  */
    	j++;

	}
	if (key==13){
		LCD_sendCommand(CLEAR_COMMAND);
	}
}
static uint8 compare(uint8 new_pass[7], uint8 match_pass[7] ){
	uint8 i,j=0;
	for (i=0;i<5;i++){

		if (match_pass[i]==new_pass[i]){
			j++;
		}

	}

	if(j==5){
		LCD_displayStringRowColumn(0,0,"matched!");
	}
	else{
		LCD_displayStringRowColumn(0,0,"Not matched!");
	}

	return j;
}
static void F_compare(uint8 new_pass[7], uint8 match_pass[7],char arr[50],enum READY R){
	uint8 i,j=0,z=1;
	j=compare(new_pass,match_pass);

	while(j!=5){
    	get_pass(arr,match_pass);
    	j=compare(new_pass,match_pass);
    	z++;
		if(z==3){
			UART_sendByte(READY4);
			_delay_ms(100);
			LCD_sendCommand(CLEAR_COMMAND);
			LCD_displayStringRowColumn(0,0,"Stranger!");
			timer0_init_CTC_mode(50);
			//timer0_stop();
			//_delay_ms(60000);

		}

	}
	if (j==5) {

    	UART_sendByte(R);
    	for(i=0;i<5;i++){
    		while(UART_recieveByte()!=R){};
    		UART_sendByte(new_pass[i]);

    	}
	}

}
int main(void)
{
	uint8 i,key
	,new_pass[7],match_pass[7],old_pass[7],match_pass2[7];
	LCD_init();
	UART_init();
	get_pass("Enter your PW:", new_pass);
	_delay_ms(10);
	get_pass("reEnter your PW:",match_pass);
	F_compare(new_pass,match_pass,"reEnter your PW:",READY1);


    while(1)
    {

		LCD_displayStringRowColumn(0,0,"- open");
		LCD_displayStringRowColumn(1,0,"+ New password");
		_delay_ms(1000);
		key = KeyPad_getPressedKey(); /* get the pressed key number */
		_delay_ms(2000); /* Press time  */
		if (key =='+'){
			get_pass("Enter old PW:", old_pass);
			UART_sendByte(READY2);
			for(i=0;i<5;i++){
				while(UART_recieveByte()!=READY2){};
				match_pass2[i]=UART_recieveByte();
				_delay_ms(100);
			}
			//Check_Stranger(match_pass2,old_pass,"reEnter old PW:");
			F_compare(match_pass2,old_pass,"reEnter old PW:",READY3);
			get_pass("Enter new PW:", new_pass);
			_delay_ms(10);
			get_pass("reEnter new PW:",match_pass);
			F_compare(new_pass,match_pass,"reEnter new PW:",READY1);
		}
		else if(key=='-'){
			UART_sendByte(READY5);
			LCD_sendCommand(CLEAR_COMMAND);
			timer0_init_CTC_mode(250);
			LCD_displayStringRowColumn(0,0,"DOOR OPEN");

			//_delay_ms(40000);
			LCD_sendCommand(CLEAR_COMMAND);
			LCD_displayStringRowColumn(0,0,"DOOR CLOSE");
			timer0_init_CTC_mode(250);
			//timer0_stop();
			//_delay_ms(40000);
		}
		LCD_sendCommand(CLEAR_COMMAND);
    }

}
